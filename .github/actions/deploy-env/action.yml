name: Deploy Indexer Env
description: Deploys the indexer infrastructure and apps to an environment
inputs:
  stage:
    description: Indexer Environment to deploy on
    required: true
    default: dev
  secrets:
    description: Secrets
    required: true
runs:
  using: composite
  steps:
    - uses: actions/setup-node@v2
      with:
        node-version: 16.x
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - name: Build Go Parser Worker
      working-directory: infra/shared/stack
      shell: bash
      run: GOOS=linux GOARCH=amd64 go build -o worker ../../../cmd/parsing-worker
    - name: Zip Parser Worker
      working-directory: infra/shared/stack
      shell: bash
      run: zip parsing.zip worker     
    - name: Build Go Addition Worker
      working-directory: infra/shared/stack
      shell: bash
      run: GOOS=linux GOARCH=amd64 go build -o worker ../../../cmd/addition-worker
    - name: Zip Addition Worker
      working-directory: infra/shared/stack
      shell: bash
      run: zip addition.zip worker
    - name: Build Go Completion Worker
      working-directory: infra/shared/stack
      shell: bash
      run: GOOS=linux GOARCH=amd64 go build -o worker ../../../cmd/completion-worker
    - name: Zip Completion Worker
      working-directory: infra/shared/stack
      shell: bash
      run: zip completion.zip worker    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ fromJSON(inputs.secrets).AWS_ACCESS_KEY_ID }}
        aws-region: ${{ fromJSON(inputs.secrets).AWS_REGION }}
        aws-secret-access-key: ${{ fromJSON(inputs.secrets).AWS_SECRET_ACCESS_KEY }}
    - name: Login to AWS ECR
      id: login_ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Install Pulumi CLI
      uses: pulumi/setup-pulumi@v2
    - name: Login to Pulumi backend
      shell: bash
      run: pulumi login s3://nftcom-pulumi-state
    - name: Install Indexer Infra Deps
      working-directory: infra
      shell: bash
      run: npm install
    - name: Deploy Indexer Shared Infra
      working-directory: infra
      shell: bash
      env:
        STAGE: ${{ inputs.stage }}
        PULUMI_CONFIG_PASSPHRASE: ""
        AWS_ACCOUNT_ID: ${{ fromJSON(inputs.secrets).AWS_ACCOUNT_ID }}
        ZMOK_HTTP_URL: ${{ fromJSON(inputs.secrets).ZMOK_HTTP_URL }}
        DB_PASSWORD: ${{ fromJSON(inputs.secrets).DB_PASSWORD }}
        VPC_CIDR: ${{ fromJSON(inputs.secrets).VPC_CIDR }}
      run: npm run deploy:shared
    - name: Build and Push Indexer Docker Image(s)
      shell: bash
      env:
        REPO: ${{ steps.login_ecr.outputs.registry }}/${{ inputs.stage }}-indexer
      run: |
        export DOCKER_BUILDKIT=1
        
        docker build . --build-arg BUILDKIT_INLINE_CACHE=1 -f cmd/parsing-dispatcher/Dockerfile -t ${{ env.REPO }}:parsing-dispatcher -t ${{ env.REPO }}:parsing-dispatcher-${{ github.sha }} 
        docker push ${{ env.REPO }}:parsing-dispatcher
        docker push ${{ env.REPO }}:parsing-dispatcher-${{ github.sha }}

        docker build . --build-arg BUILDKIT_INLINE_CACHE=1 -f cmd/addition-dispatcher/Dockerfile -t ${{ env.REPO }}:addition-dispatcher -t ${{ env.REPO }}:addition-dispatcher-${{ github.sha }} 
        docker push ${{ env.REPO }}:addition-dispatcher
        docker push ${{ env.REPO }}:addition-dispatcher-${{ github.sha }}

        docker build . --build-arg BUILDKIT_INLINE_CACHE=1 -f cmd/completion-dispatcher/Dockerfile -t ${{ env.REPO }}:completion-dispatcher -t ${{ env.REPO }}:completion-dispatcher-${{ github.sha }} 
        docker push ${{ env.REPO }}:completion-dispatcher
        docker push ${{ env.REPO }}:completion-dispatcher-${{ github.sha }}
        
        docker build . --build-arg BUILDKIT_INLINE_CACHE=1 -f cmd/jobs-creator/Dockerfile -t ${{ env.REPO }}:jobs-creator -t ${{ env.REPO }}:jobs-creator-${{ github.sha }} 
        docker push ${{ env.REPO }}:jobs-creator
        docker push ${{ env.REPO }}:jobs-creator-${{ github.sha }}
    - name: Deploy Indexer ECS (Cluster and Task Definitions)
      shell: bash
      working-directory: infra
      env:
        STAGE: ${{ inputs.stage }}
        PULUMI_CONFIG_PASSPHRASE: ""
        API_USERNAME: ${{ fromJSON(inputs.secrets).API_USERNAME }}
        API_PASSWORD: ${{ fromJSON(inputs.secrets).API_PASSWORD }}
        AWS_ACCOUNT_ID: ${{ fromJSON(inputs.secrets).AWS_ACCOUNT_ID }}
        AWS_ACCESS_KEY_ID: ${{ fromJSON(inputs.secrets).AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ fromJSON(inputs.secrets).AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ fromJSON(inputs.secrets).AWS_REGION }}
        ECR_REGISTRY: ${{ fromJSON(inputs.secrets).ECR_REGISTRY }}
        DB_EVENT_HOST: ${{ fromJSON(inputs.secrets).DB_EVENT_HOST }}
        DB_JOB_HOST: ${{ fromJSON(inputs.secrets).DB_JOB_HOST }} 
        DB_GRAPH_HOST: ${{ fromJSON(inputs.secrets).DB_GRAPH_HOST }}
        DB_PORT: ${{ fromJSON(inputs.secrets).DB_PORT }}
        DB_NAME: ${{ fromJSON(inputs.secrets).DB_NAME }}
        DB_USER: ${{ fromJSON(inputs.secrets).DB_USER }}
        DB_PASSWORD: ${{ fromJSON(inputs.secrets).DB_PASSWORD }}
        PARSING_LAMBDA_NAME: ${{ fromJSON(inputs.secrets).PARSING_LAMBDA_NAME }}
        ADDITION_LAMBDA_NAME: ${{ fromJSON(inputs.secrets).ADDITION_LAMBDA_NAME }}
        COMPLETION_LAMBDA_NAME: ${{ fromJSON(inputs.secrets).COMPLETION_LAMBDA_NAME }}
        INDEXER_LOG_LEVEL: ${{ fromJSON(inputs.secrets).INDEXER_LOG_LEVEL }}
        COMPLETION_RATE_LIMIT: ${{ fromJSON(inputs.secrets).COMPLETION_RATE_LIMIT }}
        EC2_PUBLIC_IP: ${{ fromJSON(inputs.secrets).EC2_PUBLIC_IP }}
        PARSER_HEIGHT_RANGE: ${{ fromJSON(inputs.secrets).PARSER_HEIGHT_RANGE }}
        PARSER_RATE_LIMIT: ${{ fromJSON(inputs.secrets).PARSER_RATE_LIMIT }}
        ADDITION_RATE_LIMIT: ${{ fromJSON(inputs.secrets).ADDITION_RATE_LIMIT }}
        ZMOK_HTTP_URL: ${{ fromJSON(inputs.secrets).ZMOK_HTTP_URL }}
        ZMOK_WS_URL: ${{ fromJSON(inputs.secrets).ZMOK_WS_URL }}
      run: npm run deploy:indexer
      